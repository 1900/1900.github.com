<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:media="http://search.yahoo.com/mrss/"><channel><title><![CDATA[C'est la vie]]></title><description><![CDATA[Never say never!]]></description><link>http:///</link><generator>Ghost 0.7</generator><lastBuildDate>Thu, 04 Feb 2016 06:24:36 GMT</lastBuildDate><atom:link href="http:///rss/" rel="self" type="application/rss+xml"/><ttl>60</ttl><item><title><![CDATA[Groovy去除重复数据]]></title><description><![CDATA[<pre><code class="language-groovy">def list = [a, b, c, c, c,d,e,e]  
// [a, b, c, d, e] 
list.unique()  
</code></pre>]]></description><link>http:///groovy-qu-zhong/</link><guid isPermaLink="false">984537a4-707d-44d3-b29a-855c44a56459</guid><category><![CDATA[Groovy]]></category><dc:creator><![CDATA[Grizzly]]></dc:creator><pubDate>Thu, 04 Feb 2016 06:23:21 GMT</pubDate><content:encoded><![CDATA[<pre><code class="language-groovy">def list = [a, b, c, c, c,d,e,e]  
// [a, b, c, d, e] 
list.unique()  
</code></pre>]]></content:encoded></item><item><title><![CDATA[Groovy 排序]]></title><description><![CDATA[<pre><code class="language-groovy">def list =[1,55,28,9,10,23,16]

//升序
list.sort {a,b -&gt;  
 return a.compareTo(b)
}

//降序
list.sort {a,b -&gt;  
 return b.compareTo(a)
}
</code></pre>]]></description><link>http:///groovy-sort/</link><guid isPermaLink="false">35fbd64a-0b5a-41d9-b8ac-24a0c3556de3</guid><category><![CDATA[Groovy]]></category><dc:creator><![CDATA[Grizzly]]></dc:creator><pubDate>Thu, 04 Feb 2016 06:20:50 GMT</pubDate><content:encoded><![CDATA[<pre><code class="language-groovy">def list =[1,55,28,9,10,23,16]

//升序
list.sort {a,b -&gt;  
 return a.compareTo(b)
}

//降序
list.sort {a,b -&gt;  
 return b.compareTo(a)
}
</code></pre>]]></content:encoded></item><item><title><![CDATA[grails 命令大全]]></title><description><![CDATA[<h6 id="">常用命令</h6>

<p>创建新的Grails应用</p>

<pre><code class="language-grails">grails create-app  
</code></pre>

<p>
创建新的控制器</p>

<pre><code class="language-grails">grails create-controller  
</code></pre>

<p>创建新的领域类</p>

<pre><code class="language-grails">grails create-domain-class
</code></pre>

<p>创建新的服务类</p>

<pre><code class="language-grails">grails create-service  
</code></pre>

<p>创建新的过滤器</p>

<pre><code class="language-grails">grails create-filters
</code></pre>

<p>创建标签库</p>

<pre><code class="language-grails">grails create-tag-lib
</code></pre>

<p>创建新的Groovy脚本</p>

<pre><code class="language-grails">grails create-script  
</code></pre>

<p>清除各种资源,如生成的类</p>

<pre><code class="language-grails">grails clean  
</code></pre>

<p>产生静态组件,含控制器、视图、测试文件等</p>

<pre><code class="language-grails">grails generate-all
</code></pre>

<p>产生控制器</p>

<pre><code class="language-grails">grails generate-controller  
</code></pre>

<p>产生GSP视图</p>

<pre><code class="language-grails">grails generate-views
</code></pre>

<p>更新应用到新版本</p>

<pre><code class="language-grails">grails upgrade
</code></pre>

<p>打成war包</p>

<pre><code class="language-grails">grails war 
</code></pre>

<p>运行应用</p>

<pre><code class="language-grails">grails run-app
</code></pre>

<p>运行单元测试与集成测试，并且生成测试报告</p>

<pre><code class="language-grails">grails</code></pre>]]></description><link>http:///grails-chang-yong-ming-ling/</link><guid isPermaLink="false">a0acdea2-c036-48c5-a1d6-5ed66b82b706</guid><category><![CDATA[Grails]]></category><dc:creator><![CDATA[Grizzly]]></dc:creator><pubDate>Thu, 04 Feb 2016 06:17:16 GMT</pubDate><content:encoded><![CDATA[<h6 id="">常用命令</h6>

<p>创建新的Grails应用</p>

<pre><code class="language-grails">grails create-app  
</code></pre>

<p>
创建新的控制器</p>

<pre><code class="language-grails">grails create-controller  
</code></pre>

<p>创建新的领域类</p>

<pre><code class="language-grails">grails create-domain-class
</code></pre>

<p>创建新的服务类</p>

<pre><code class="language-grails">grails create-service  
</code></pre>

<p>创建新的过滤器</p>

<pre><code class="language-grails">grails create-filters
</code></pre>

<p>创建标签库</p>

<pre><code class="language-grails">grails create-tag-lib
</code></pre>

<p>创建新的Groovy脚本</p>

<pre><code class="language-grails">grails create-script  
</code></pre>

<p>清除各种资源,如生成的类</p>

<pre><code class="language-grails">grails clean  
</code></pre>

<p>产生静态组件,含控制器、视图、测试文件等</p>

<pre><code class="language-grails">grails generate-all
</code></pre>

<p>产生控制器</p>

<pre><code class="language-grails">grails generate-controller  
</code></pre>

<p>产生GSP视图</p>

<pre><code class="language-grails">grails generate-views
</code></pre>

<p>更新应用到新版本</p>

<pre><code class="language-grails">grails upgrade
</code></pre>

<p>打成war包</p>

<pre><code class="language-grails">grails war 
</code></pre>

<p>运行应用</p>

<pre><code class="language-grails">grails run-app
</code></pre>

<p>运行单元测试与集成测试，并且生成测试报告</p>

<pre><code class="language-grails">grails test-app
</code></pre>

<p>指定运行端口为888</p>

<pre><code class="language-grails">Grails –Dserver.port=888 run-app  
</code></pre>

<p>指定编码为gbk,端口888</p>

<pre><code class="language-grails">Grails -Dfile.encoding=GBK -Dserver.port=888 run-app 
</code></pre>

<p>以utf-8打war包</p>

<pre><code class="language-grails">Grails -Dfile.encoding=UTF-8 prod war  
</code></pre>

<p>以utf-8打war包,war包名称test</p>

<pre><code class="language-grails">Grails -Dfile.encoding=UTF-8 prod war test.war  
</code></pre>

<p>以prod env运行</p>

<pre><code class="language-grails">grails prod run-war  
</code></pre>

<h6 id="">不太常用命令</h6>

<p>执行容器外的引导程序,可以做初始化工作</p>

<pre><code class="language-grails">grails bootstrap
</code></pre>

<p>预编译Java与Groovy类</p>

<pre><code class="language-grails">grails compile  
</code></pre>

<p>产生javadoc和groovydoc文档</p>

<pre><code class="language-grails">grails doc
</code></pre>

<p>调用Groovy Console GUI工具</p>

<pre><code class="language-grails">grails console
</code></pre>

<p>在grails-app/conf/hibernate目录下创建hibernate配置文件</p>

<pre><code class="language-grails">grails create-hibernate-cfg-xml  
</code></pre>

<p>创建新的集成测试</p>

<pre><code class="language-grails">grails create-integration-test  
</code></pre>

<p>创建新的插件</p>

<pre><code class="language-grails">grails create-plugin
</code></pre>

<p>创建新的单元测试</p>

<pre><code class="language-grails">grails init  
</code></pre>

<p>初始化应用</p>

<pre><code class="language-grails">grails create-unit-test
</code></pre>

<p>安装依赖的jar包</p>

<pre><code class="language-grails">grails install-dependency  
</code></pre>

<p>安装扩展插件</p>

<pre><code class="language-grails">grails install-plugin
</code></pre>

<p>允许Grails应用与IDE和构建系统集成</p>

<pre><code class="language-grails">grails integrate-with
</code></pre>

<p>列出插件更新 </p>

<pre><code class="language-grails">grails list-plugin-updates
</code></pre>

<p>列出插件更新 </p>

<pre><code class="language-grails">grails list-plugin-updates
</code></pre>

<p>列出可以使用的插件</p>

<pre><code class="language-grails">grails list-plugins 
</code></pre>

<p>打包到C:/Documents and Settings/Administrator/.grails/2.<em>.</em>/projects/XXX
grails package  </p>

<pre><code class="language-grails">grails package  
</code></pre>

<p>打包可以安装到其他应用的插件</p>

<pre><code class="language-grails">grails package-plugin
</code></pre>

<p>查看特定插件信息</p>

<pre><code class="language-grails">grails plugin-info 
</code></pre>

<p>标记和发布插件</p>

<pre><code class="language-grails">grails release-plugin
</code></pre>

<p>删除代理服务器</p>

<pre><code class="language-grails">grails remove-proxy  
</code></pre>

<p>打包并运行</p>

<pre><code class="language-grails">grails run-war  
</code></pre>

<p>导出DDL数据库脚本</p>

<pre><code class="language-grails">grails schema-export  
</code></pre>

<p>激活代理配置</p>

<pre><code class="language-grails">grails set-proxy  
</code></pre>

<p>设置应用版本号</p>

<pre><code class="language-grails">grails set-version
</code></pre>

<p>启动一个Groovy终端shell并初始化了Grails runtime</p>

<pre><code class="language-grails">grails shell  
</code></pre>

<p>输出本应用的各种统计信息,如有多少领域类等</p>

<pre><code class="language-grails">grails stats 
</code></pre>

<p>把应用打包并部署到Tomcat</p>

<pre><code class="language-grails">grails tomcat
</code></pre>

<p>卸载插件</p>

<pre><code class="language-grails">grails uninstall-plugin  
</code></pre>

<p>查看帮助</p>

<pre><code class="language-grails">grails help  
</code></pre>]]></content:encoded></item><item><title><![CDATA[shell,使用find批量删除时指定文件个数]]></title><description><![CDATA[<pre><code class="language-shell">find . &gt;list | tail -10000 list | xargs rm -rf {} | xargs rm -rf 

find . -name "*" -exec rm {} \; -print |head -10000 
</code></pre>]]></description><link>http:///shell-shi-yong-findpi-liang-shan-chu-shi-zhi-ding-wen-jian-ge-shu/</link><guid isPermaLink="false">8bd9d260-57f7-441a-a6dd-5b605cba4250</guid><category><![CDATA[Linux]]></category><category><![CDATA[Shell Tips]]></category><dc:creator><![CDATA[Grizzly]]></dc:creator><pubDate>Thu, 04 Feb 2016 05:08:24 GMT</pubDate><content:encoded><![CDATA[<pre><code class="language-shell">find . &gt;list | tail -10000 list | xargs rm -rf {} | xargs rm -rf 

find . -name "*" -exec rm {} \; -print |head -10000 
</code></pre>]]></content:encoded></item><item><title><![CDATA[shell,查看cpu及内存占用]]></title><description><![CDATA[<pre><code class="language-shell">top -b -n 1 |grep nginx|awk '{print "cpu:"$9"%","mem:"$10"%"}'  
</code></pre>]]></description><link>http:///shell-cha-kan-cpuji-nei-cun-zhan-yong/</link><guid isPermaLink="false">51b60bc6-8b8b-4249-9bd2-78288afae847</guid><category><![CDATA[Linux]]></category><category><![CDATA[Shell Tips]]></category><dc:creator><![CDATA[Grizzly]]></dc:creator><pubDate>Thu, 04 Feb 2016 05:02:16 GMT</pubDate><content:encoded><![CDATA[<pre><code class="language-shell">top -b -n 1 |grep nginx|awk '{print "cpu:"$9"%","mem:"$10"%"}'  
</code></pre>]]></content:encoded></item><item><title><![CDATA[shell,使用touch或find对目录的Modify时间修改]]></title><description><![CDATA[<pre><code>touch -c -m -t 201602010000 /etl/home/gbuser/test/

find . -exec touch -c -m -t 201602010000 {} \;  
</code></pre>]]></description><link>http:///shell-shi-yong-touchhuo-finddui-mu-lu-de-modifyshi-jian-xiu-gai/</link><guid isPermaLink="false">30f4b2d8-9da6-4a02-a430-aaa5c15ca4ab</guid><category><![CDATA[Linux]]></category><category><![CDATA[Shell Tips]]></category><dc:creator><![CDATA[Grizzly]]></dc:creator><pubDate>Thu, 04 Feb 2016 04:58:01 GMT</pubDate><content:encoded><![CDATA[<pre><code>touch -c -m -t 201602010000 /etl/home/gbuser/test/

find . -exec touch -c -m -t 201602010000 {} \;  
</code></pre>]]></content:encoded></item><item><title><![CDATA[shell,find查找时排除子目录]]></title><description><![CDATA[<pre><code class="language-shell">find . -path "./*/*" -prune -o -type f -size -10000000c -print| xargs ls -crt -ld | head -1000  
</code></pre>]]></description><link>http:///shell-findcha-zhao-shi-pai-chu-zi-mu-lu/</link><guid isPermaLink="false">a49179c0-ab25-4402-8bf5-2cfd02e1aad1</guid><category><![CDATA[Shell Tips]]></category><category><![CDATA[Linux]]></category><dc:creator><![CDATA[Grizzly]]></dc:creator><pubDate>Thu, 04 Feb 2016 04:54:57 GMT</pubDate><content:encoded><![CDATA[<pre><code class="language-shell">find . -path "./*/*" -prune -o -type f -size -10000000c -print| xargs ls -crt -ld | head -1000  
</code></pre>]]></content:encoded></item><item><title><![CDATA[使用python监控进程]]></title><description><![CDATA[<p>eg. <br>
监控nginx</p>

<pre><code class="language-python"># !/usr/bin/env python
import os, sys, time

while True:  
    time.sleep(3)
    try:
        ret = os.popen('ps -C nginx -o pid,cmd').readlines()
        if len(ret) &lt; 2:
            print "nginx process killed, restarting service in 3 seconds."
            time.sleep(3)
            os.system("service nginx restart")
    except:
        print</code></pre>]]></description><link>http:///shi-yong-pythonjian-kong-jin-cheng/</link><guid isPermaLink="false">0ee79be4-7fb2-42dd-ad28-405d66495fce</guid><category><![CDATA[Python]]></category><dc:creator><![CDATA[Grizzly]]></dc:creator><pubDate>Thu, 04 Feb 2016 04:53:04 GMT</pubDate><content:encoded><![CDATA[<p>eg. <br>
监控nginx</p>

<pre><code class="language-python"># !/usr/bin/env python
import os, sys, time

while True:  
    time.sleep(3)
    try:
        ret = os.popen('ps -C nginx -o pid,cmd').readlines()
        if len(ret) &lt; 2:
            print "nginx process killed, restarting service in 3 seconds."
            time.sleep(3)
            os.system("service nginx restart")
    except:
        print "Error", sys.exc_info()[1]
</code></pre>]]></content:encoded></item><item><title><![CDATA[install MariaDB on debian 8]]></title><description><![CDATA[<pre><code class="language-shell">sudo apt-get install software-properties-common  
sudo apt-key adv --recv-keys --keyserver keyserver.ubuntu.com 0xcbcb082a1bb943db  
</code></pre>

<pre><code class="language-shell">sudo add-apt-repository 'deb [arch=amd64,i386] http://mirrors.opencas.cn/mariadb/repo/10.1/debian jessie main'  
</code></pre>

<p>或者是添加</p>

<pre><code class="language-shell">deb [arch=amd64,i386] http://mirrors.opencas.cn/mariadb/repo/10.1/debian jessie main  
deb-src http://mirrors.opencas.</code></pre>]]></description><link>http:///install-mariadb-on-debian-8/</link><guid isPermaLink="false">b40cf444-32dc-496c-ac77-b692c25114ec</guid><category><![CDATA[Linux]]></category><category><![CDATA[MySQL]]></category><dc:creator><![CDATA[Grizzly]]></dc:creator><pubDate>Thu, 04 Feb 2016 04:47:34 GMT</pubDate><content:encoded><![CDATA[<pre><code class="language-shell">sudo apt-get install software-properties-common  
sudo apt-key adv --recv-keys --keyserver keyserver.ubuntu.com 0xcbcb082a1bb943db  
</code></pre>

<pre><code class="language-shell">sudo add-apt-repository 'deb [arch=amd64,i386] http://mirrors.opencas.cn/mariadb/repo/10.1/debian jessie main'  
</code></pre>

<p>或者是添加</p>

<pre><code class="language-shell">deb [arch=amd64,i386] http://mirrors.opencas.cn/mariadb/repo/10.1/debian jessie main  
deb-src http://mirrors.opencas.cn/mariadb/repo/10.1/debian jessie main  
</code></pre>

<p>到/etc/apt/sources.list</p>

<pre><code class="language-shell">sudo apt-get update  
sudo apt-get install mariadb-server  
</code></pre>]]></content:encoded></item><item><title><![CDATA[shell,使用sed对文件截取]]></title><description><![CDATA[<p>截取第1行到第200行</p>

<pre><code class="language-shell">sed -n '1,200p' file &gt;&gt;newfile  
sed -i '1,200d' file  
</code></pre>]]></description><link>http:///shell-shi-yong-seddui-wen-jian-fen-ge/</link><guid isPermaLink="false">805b4d21-3ea1-457c-8b36-8f5178b5ce47</guid><category><![CDATA[Linux]]></category><category><![CDATA[Shell Tips]]></category><dc:creator><![CDATA[Grizzly]]></dc:creator><pubDate>Thu, 04 Feb 2016 04:39:10 GMT</pubDate><content:encoded><![CDATA[<p>截取第1行到第200行</p>

<pre><code class="language-shell">sed -n '1,200p' file &gt;&gt;newfile  
sed -i '1,200d' file  
</code></pre>]]></content:encoded></item><item><title><![CDATA[shell,使用find只列出文件名]]></title><description><![CDATA[<pre><code class="language-shell">find . -name "*.c" -exec basename {} \;  
</code></pre>]]></description><link>http:///shell-shi-yong-findzhi-lie-chu-wen-jian-ming/</link><guid isPermaLink="false">c309d209-ff2c-43d9-99ea-7de6a22d9e73</guid><category><![CDATA[Linux]]></category><category><![CDATA[Shell Tips]]></category><dc:creator><![CDATA[Grizzly]]></dc:creator><pubDate>Thu, 04 Feb 2016 04:25:34 GMT</pubDate><content:encoded><![CDATA[<pre><code class="language-shell">find . -name "*.c" -exec basename {} \;  
</code></pre>]]></content:encoded></item><item><title><![CDATA[Shell,使用ls,export查找n天前的文件]]></title><description><![CDATA[<pre><code class="language-shell">ls export$(date -d'15 days ago' "+%Y%m%d")*.pn.gz  
</code></pre>]]></description><link>http:///shell-shi-yong-ls-exportcha-zhao-ntian-qian-de-wen-jian/</link><guid isPermaLink="false">0a8d72fd-39b0-4924-b0a6-f839d8db90c2</guid><category><![CDATA[Linux]]></category><category><![CDATA[Shell Tips]]></category><dc:creator><![CDATA[Grizzly]]></dc:creator><pubDate>Thu, 04 Feb 2016 04:24:28 GMT</pubDate><content:encoded><![CDATA[<pre><code class="language-shell">ls export$(date -d'15 days ago' "+%Y%m%d")*.pn.gz  
</code></pre>]]></content:encoded></item><item><title><![CDATA[hp unix 常用的一些命令总结]]></title><description><![CDATA[<p>查找目录下的文件</p>

<pre><code class="language-shell">find &lt;path&gt; "*" | xargs ls -l  
</code></pre>

<p>删除文件</p>

<pre><code class="language-shell">cd &lt;path&gt;  
find . -name "*" | xargs rm{}  
</code></pre>

<p>移动文件</p>

<pre><code class="language-shell">find &lt;source directory&gt; -name "*" | xargs -I {} mv {} &lt;/destination directory&gt;  
</code></pre>

<p>eg.  </p>

<pre><code class="language-shell">find /etl/home/gbuser/reject/ -name "*" | xargs rm{}  
</code></pre>

<p>压缩</p>

<pre><code class="language-shell">tar xvf files.tar -C /etl/home/gbuser/offline/</code></pre>]]></description><link>http:///hp-unix-find/</link><guid isPermaLink="false">2874c228-fc61-458f-a231-5c14f8cc040f</guid><category><![CDATA[Shell Tips]]></category><category><![CDATA[HP UNIX]]></category><dc:creator><![CDATA[Grizzly]]></dc:creator><pubDate>Thu, 04 Feb 2016 04:18:44 GMT</pubDate><content:encoded><![CDATA[<p>查找目录下的文件</p>

<pre><code class="language-shell">find &lt;path&gt; "*" | xargs ls -l  
</code></pre>

<p>删除文件</p>

<pre><code class="language-shell">cd &lt;path&gt;  
find . -name "*" | xargs rm{}  
</code></pre>

<p>移动文件</p>

<pre><code class="language-shell">find &lt;source directory&gt; -name "*" | xargs -I {} mv {} &lt;/destination directory&gt;  
</code></pre>

<p>eg.  </p>

<pre><code class="language-shell">find /etl/home/gbuser/reject/ -name "*" | xargs rm{}  
</code></pre>

<p>压缩</p>

<pre><code class="language-shell">tar xvf files.tar -C /etl/home/gbuser/offline/files  
</code></pre>

<p>解压</p>

<pre><code class="language-shell">gzip -d *.tar.gz  
tar xvf *.tar  
gunzip &lt; FILE.tar.gz | tar xvf -  
</code></pre>

<p>批量解压</p>

<pre><code class="language-shell">find /etl/home/gbuser/dirs -name "*.gz" | xargs  gzip -d{}  
find /u1/home/files -type f -name "*.gz" |xargs gzip -d  
</code></pre>

<p>移动文件</p>

<pre><code class="language-shell">find /etl/home/gbuser/dirs -name "*" | xargs -I {} mv {} /etl/home/gbuser/test_dirs  
</code></pre>]]></content:encoded></item><item><title><![CDATA[java use stax parse xml]]></title><description><![CDATA[<pre><code class="language-java">import java.io.*;  
import javax.xml.stream.*;  
import javax.xml.stream.events.*;

public class StaxDemo {  
    public static void main(String[] args) {
        XMLInputFactory inputFactory = XMLInputFactory.newInstance();
        InputStream input;
        input = new ByteArrayInputStream(
                ("&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;"
                        + "&lt;work-contact-info&gt;"
                        + "&lt;Location&gt;Shanghai-shuion-333&lt;/Location&gt;"
                        + "&lt;Postal&</code></pre>]]></description><link>http:///java-use-stax-parse-xml/</link><guid isPermaLink="false">fe240af9-1d27-4403-836f-5c780b9d7be0</guid><category><![CDATA[Java]]></category><dc:creator><![CDATA[Grizzly]]></dc:creator><pubDate>Thu, 04 Feb 2016 04:00:18 GMT</pubDate><content:encoded><![CDATA[<pre><code class="language-java">import java.io.*;  
import javax.xml.stream.*;  
import javax.xml.stream.events.*;

public class StaxDemo {  
    public static void main(String[] args) {
        XMLInputFactory inputFactory = XMLInputFactory.newInstance();
        InputStream input;
        input = new ByteArrayInputStream(
                ("&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;"
                        + "&lt;work-contact-info&gt;"
                        + "&lt;Location&gt;Shanghai-shuion-333&lt;/Location&gt;"
                        + "&lt;Postal&gt;200020&lt;/Postal&gt;"
                        + "&lt;Tel&gt;&lt;fix&gt;66666666&lt;/fix&gt;&lt;mobile&gt;15800000000&lt;/mobile&gt;&lt;/Tel&gt;"
                        + "&lt;Appellation&gt;Mr. Hang&lt;/Appellation&gt;"
                        + "&lt;/work-contact-info&gt;").getBytes());

        try {
            // input = new FileInputStream(new File(
            // "C:\\Workspace\\users.xml"));

            XMLEventReader xmlEventReader = inputFactory
                    .createXMLEventReader(input);

            while (xmlEventReader.hasNext()) {
                XMLEvent event = xmlEventReader.nextEvent();

                if (event.isStartElement()) {
                    StartElement startElement = event.asStartElement();
                    System.out.println("startElement="
                            + startElement.getName().toString());
                }

                if (event.isCharacters()) {
                    Characters text = event.asCharacters();

                    if (!text.isWhiteSpace()) {
                        System.out.println("isCharacters=" + "\t"
                                + text.getData());
                    }
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
</code></pre>]]></content:encoded></item><item><title><![CDATA[Shell,使用cat,sed或awk删除空行]]></title><description><![CDATA[<p>使用cat  </p>

<pre><code class="language-shell">cat filename|tr -s '\n'  
</code></pre>

<p>使用sed</p>

<pre><code class="language-shell">sed '/^$/d' filename  
sed -e '/^\n$/d' file.txt  
sed '/^ *$/d' list.txt &gt;newlist.txt  
</code></pre>

<p>使用awk</p>

<pre><code class="language-shell">awk '{if($0!="")print}' filename  
</code></pre>]]></description><link>http:///shell-shi-yong-cat-sedhuo-awkshan-chu-kong-xing/</link><guid isPermaLink="false">1a8f2d89-ebbf-4a53-9c38-c994bf2f62fb</guid><category><![CDATA[Linux]]></category><category><![CDATA[Shell Tips]]></category><dc:creator><![CDATA[Grizzly]]></dc:creator><pubDate>Thu, 04 Feb 2016 03:56:51 GMT</pubDate><content:encoded><![CDATA[<p>使用cat  </p>

<pre><code class="language-shell">cat filename|tr -s '\n'  
</code></pre>

<p>使用sed</p>

<pre><code class="language-shell">sed '/^$/d' filename  
sed -e '/^\n$/d' file.txt  
sed '/^ *$/d' list.txt &gt;newlist.txt  
</code></pre>

<p>使用awk</p>

<pre><code class="language-shell">awk '{if($0!="")print}' filename  
</code></pre>]]></content:encoded></item></channel></rss>